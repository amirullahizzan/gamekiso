#include "Main.h"
#include "Game.h"
#include "Random.h"
#include "Float2.h"
#include "Hit.h"

#include "Npc.h"

//	ＮＰＣの最大登場数
#define NPC_MAX		10

//	マウス座標との当たり判定で使うＮＰＣの半径
#define NPC_RADIUS	25.0f

//	画像用の変数
int npc_image;

//	今回はＮＰＣは途中から出たり消えたりしたいのでポインタで宣言します
//	ここで宣言した時点ではまだＮＰＣの実体はどこにも存在していません
Npc* npc[NPC_MAX];

//---------------------------------------------------------------------------------
//	初期化処理
//---------------------------------------------------------------------------------
void GameInit()
{
	//	画像の読み込み
	npc_image = LoadGraph("data/npc.bmp");

	//	ポインタの初期化
	//	今回は途中から出てくるので最初は無しの状態から開始します
	//	「指し示すアドレスはありません」という意味
	for (size_t i = 0; i < NPC_MAX; i++)
	{
		npc[i] = NULL;
	}
}
//---------------------------------------------------------------------------------
//	更新処理
//---------------------------------------------------------------------------------
void GameUpdate()
{
	//	スペースキーを押したら
	if (PushHitKey(KEY_INPUT_SPACE)) {
		//	ＮＰＣを登場させる（ために実体を作ります）
		//	ＮＰＣが存在していない時
		for (size_t i = 0; i < NPC_MAX; i++)
		{
			if (npc[i]) 
			{
				continue;
			}
			else
			{
				npc[i] = new Npc();
				npc[i]->Init(npc_image);
				break;
			}
		}
	}

	//	更新処理を呼ぶのはＮＰＣの実体があるときだけ
		//	この場所の更新処理を呼びます
	for (size_t i = 0; i < NPC_MAX; i++)
	{
		if (npc[i]) {
			npc[i]->Update();
		}
	}

	for (size_t i = 0; i < NPC_MAX; i++)
	{
		//	マウスクリックしたら
		if (PushMouseInput()) {
			Float2 mouse;
			mouse.x = GetMouseX();
			mouse.y = GetMouseY();
			//	ＮＰＣが存在しているとき
			if (npc[i])
			{
				//	マウス座標とＮＰＣで当たり判定
				if (CheckPointCircleHit(mouse, npc[i]->m_pos, NPC_RADIUS)) {
					//	当たっていたら消す（今回はポインタを使っているのでメモリ上から消す）
					//	消す前に終了処理
					npc[i]->Exit();
					//	ポインタがさしている番号のところの中身を消します
					//	確保したＮＰＣの領域の解放
					delete npc[i];
					//	上で消したのはあくまでもメモリの場所の領域だけですので
					//	ポインタに入っている番号もリセットします
					npc[i] = NULL;
				}
			}
		}
	}
}
//---------------------------------------------------------------------------------
//	描画処理
//---------------------------------------------------------------------------------
void GameRender()
{
	//	ＮＰＣが存在しているとき
	for (size_t i = 0; i < NPC_MAX; i++)
	{
		if (npc[i])
		{
			npc[i]->Render();
		}
	}

	DrawString(16, 16, "スペースキー　：ＮＰＣ登場", GetColor(255, 255, 255));
	DrawString(16, 32, "ＮＰＣクリック：ＮＰＣ消す", GetColor(255, 255, 255));
	DrawString(16, 48, "ＮＰＣが複数登場できるようにポインタを複数宣言（最大１０体まで）", GetColor(255, 255, 0));
}
//---------------------------------------------------------------------------------
//	終了処理
//---------------------------------------------------------------------------------
void GameExit()
{
	//	終了した時にＮＰＣの領域が残ったままだとメモリを圧迫してしまうので
	//	new で確保したメモリ領域を解放する必要があります

	//	ＮＰＣが存在しているとき
	for (size_t i = 0; i < NPC_MAX; i++)
	{
		if (npc[i]) {
			//	ＮＰＣの終了処理
			npc[i]->Exit();
			//	ＮＰＣ領域を解放
			delete npc[i];
			//	ポインタの番号もリセット
			npc[i] = NULL;
		}
	}

	DeleteGraph(npc_image);
}
